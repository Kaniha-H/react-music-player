{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","audioRef","currentSong","isPlaying","setIsPlaying","setSongInfo","songInfo","songs","setCurrentSong","setSongs","useState","activeVolume","setActiveVolume","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","opatity","opacity","faVolumeDown","volume","step","Song","src","cover","alt","name","artist","LibrarySong","songSelectHandler","selectedSong","filter","state","Library","libraryStatus","Nav","setLibraryStatus","faMusic","childHop","uuidv4","audio","App","useRef","data","songEndHandler","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","onTimeUpdate","onLoadedData","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04d52c07.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faAngleLeft, faAngleRight, faPause, faVolumeDown } from '@fortawesome/free-solid-svg-icons';\n\nconst Player = ({ \n    audioRef, \n    currentSong, \n    isPlaying, \n    setIsPlaying, \n    setSongInfo, \n    songInfo,\n    songs,\n    setCurrentSong,\n    setSongs,\n}) => {\n    // useState\n    const [activeVolume, setActiveVolume] = useState(false);\n\n    const activeLibraryHandler = (nextPrev) => {\n        const newSongs = songs.map((song) => {\n            if (song.id === nextPrev.id) {\n                return {\n                    ...song,\n                    active: true,\n                };\n            } else {\n                return{\n                    ...song,\n                    active: false,\n                };\n            }\n        });\n        setSongs(newSongs);\n    };\n        \n    // event handler\n    const playSongHandler = () => {\n        if (isPlaying) {\n            audioRef.current.pause();\n            setIsPlaying(!isPlaying);\n        } else {\n            audioRef.current.play();\n            setIsPlaying(!isPlaying);\n        }\n    };\n    const getTime = (time) => {\n        return (\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n        );\n    };\n    const dragHandler = (e) => {\n        audioRef.current.currentTime = e.target.value;\n        setSongInfo({...songInfo, currentTime: e.target.value})\n    }\n    const skipTrackHandler = async (direction) => {\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n        if (direction === 'skip-forward') {\n            // example if id 8 = 8, go back to id 0\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n        }\n        if (direction === 'skip-back') {\n            // check if id -1\n            if ((currentIndex -1) % songs.length === -1) {\n                // set id to the last song 7 here ( 8 - 1 = 7)\n                await setCurrentSong(songs[songs.length -1]);\n                activeLibraryHandler(songs[songs.length -1]);\n                if (isPlaying) audioRef.current.play();\n                // to not run the rest of code after if condition\n                return;\n            }\n            // crash if id 0 => -1 BOOOM\n            await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n            activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\n\n        }\n        if (isPlaying) audioRef.current.play();\n    };\n    // Add styles\n    const trackAnim = {\n        transform: `translateX(${songInfo.animationPercentage}%)`\n    }\n    const changeVolume = (e) => {\n        let value = e.target.value;\n        audioRef.current.volume = value;\n        setSongInfo({ ...songInfo, volume: value });\n    };\n    return (\n        <div className=\"player\">\n            <div className=\"time-control\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                <div \n                    style={{\n                        background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\n                    }} \n                    className=\"track\"\n                >     \n                    <input \n                        min={0} \n                        max={songInfo.duration || 0} \n                        value={songInfo.currentTime} \n                        onChange={dragHandler}\n                        type=\"range\" \n                    />\n                    <div \n                        style={trackAnim} \n                        className=\"animate-track\"\n                    ></div>\n                </div>\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n            </div>\n            <div className=\"play-control\">\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-back')} className=\"skip-back\" size=\"2x\" icon={faAngleLeft}/>\n                <FontAwesomeIcon \n                    onClick={playSongHandler} \n                    className=\"play\" size=\"2x\" \n                    icon={isPlaying ? faPause : faPlay}\n                />\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-forward')}  className=\"skip-forward\" size=\"2x\" icon={faAngleRight}/>\n                <FontAwesomeIcon\n                    size=\"2x\"\n                    style={activeVolume ? { opatity: 1 } : { opacity: 0.3 }}\n                    onClick={() => setActiveVolume(!activeVolume)}\n                    icon={faVolumeDown}\n                />\n                {activeVolume && (\n                    <input\n                    className=\"volumeControl\"\n                    onChange={changeVolume}\n                    value={songInfo.volume}\n                    max=\"1\"\n                    min=\"0\"\n                    step=\"0.01\"\n                    type=\"range\"\n                    />\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Player;","import React from 'react';\n\nconst Song = ({currentSong}) => {\n    return (\n        <div className=\"song-container\">\n            <img src={currentSong.cover} alt={currentSong.name} />   \n            <h2>{currentSong.name}</h2>\n            <h3>{currentSong.artist}</h3>\n        </div>\n    );\n}\n\nexport default Song;","import React from 'react';\n\nconst LibrarySong = ({song, songs, setCurrentSong, audioRef, isPlaying, id, setSongs}) => {\n    const songSelectHandler = async () => {\n        const selectedSong = songs.filter((state) => state.id === id);\n        // setCurrentSong(song);\n        await setCurrentSong(selectedSong[0]);\n        // add active state\n        const newSongs = songs.map((song) => {\n            if (song.id === id) {\n                return {\n                    ...song,\n                    active: true,\n                };\n            } else {\n                return{\n                    ...song,\n                    active: false,\n                };\n            }\n        });\n        setSongs(newSongs);\n        // check if the song is playing\n        if (isPlaying) audioRef.current.play();\n    };\n    return (\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : \"\"}`}>\n            <img src={song.cover} alt={song.name} /> \n            <div className=\"song-description\">\n                <h3>{song.name}</h3>\n                <h4>{song.artist}</h4>\n            </div>  \n        </div>\n    );\n}\n\nexport default LibrarySong;","import React from 'react';\nimport LibrarySong from './LibrarySong';\n\nconst Library = ({songs , setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus}) => {\n    return(\n        <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\n            <h2>Library</h2>\n            <div className=\"library-songs\">\n                {songs.map(song => \n                    <LibrarySong \n                        songs={songs}\n                        setCurrentSong={setCurrentSong} \n                        song={song}\n                        id={song.id}\n                        key={song.id}\n                        audioRef={audioRef}\n                        isPlaying={isPlaying}\n                        setSongs={setSongs}\n                    />\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Library;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\n\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\n    return(\n        <nav>\n            <h1>Waves</h1>\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>\n                Library\n                <FontAwesomeIcon icon={faMusic}/>\n            </button>\n        </nav>\n    );\n}\n\nexport default Nav;","import { v4 as uuidv4 } from 'uuid';\n\nfunction childHop() {\n    return [\n        {\n            name: \"Dreamstate\",\n            artist: \"Toonorth\",\n            cover: \"https://chillhop.com/wp-content/uploads/2021/05/8ef1fa972003495d1ecfba6292116174e9c5d940-1024x1024.jpg\",\n            id: uuidv4(),\n            active: true,\n            color: ['#283F52', '#949EF3'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=17947'\n        },\n        {\n            name: \"Travelbag\",\n            artist: \"mommy, Sleepy Fish\",\n            cover: \"https://chillhop.com/wp-content/uploads/2021/05/1245c0271290a3196328c0cf4aaa910cd873dfe7-1024x1024.jpg\",\n            id: uuidv4(),\n            active: false,\n            color: ['#5D93D4', '#F2E2D3'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=19058'\n        },\n        {\n            name: \"Higher\",\n            artist: \"Misha, Jussi Halme\",\n            cover: \"https://chillhop.com/wp-content/uploads/2021/05/2473c60e471fe9b40e246bf7711c87d3d6ea69a7-1024x1024.jpg\",\n            id: uuidv4(),\n            active: false,\n            color: ['#523C4B', '#FF4F6F'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=15088'\n        },\n        {\n            name: \"Cruising\",\n            artist: \"Evil Needle\",\n            cover: \"https://chillhop.com/wp-content/uploads/2021/04/cb0cc6270d7f2e1bb13e44e8832bd5c9b2a61080-1024x1024.jpg\",\n            id: uuidv4(),\n            active: false,\n            color: ['#ECCA82', '#E99856'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=17087'\n        },\n        {\n            name: \"Samething\",\n            artist: \"SwuM\",\n            cover: \"https://chillhop.com/wp-content/uploads/2021/03/74d62bc9370a68e440c1b98eaf650344f0a7faea-1024x1024.jpg\",\n            id: uuidv4(),\n            active: false,\n            color: ['#2F3C3A', '#494C38'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=15236'\n        },\n        {\n            name: \"Cascade\",\n            artist: \"Knowmadic\",\n            cover: \"https://chillhop.com/wp-content/uploads/2021/02/70a56749b8b89815fa75446030c6ba57d2c34de7-1024x1024.jpg\",\n            id: uuidv4(),\n            active: false,\n            color: ['#FF9555', '#70C29C'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=13092'\n        },\n        {\n            name: \"Harbor\",\n            artist: \"Stan Forebee, The Field Tapes, azula, Francis\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/11/8a0c857ddad531279d0757f5362380a6837b1b69-1024x1024.jpg\",\n            id: uuidv4(),\n            active: false,\n            color: ['#DAE8DE', '#E0C595'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=11245'\n        },\n        {\n            name: \"Departure\",\n            artist: \"Makzo\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/11/f78c39b4bb6313ddd0354bef896c591bfb490ff8-1024x1024.jpg\",\n            id: uuidv4(),\n            active: false,\n            color: ['#F96E06', '#CB8183'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=11771'\n        },\n    ];\n}\n\nexport default childHop;","import React, {useState, useRef} from 'react';\nimport './styles/app.scss';\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport Library from './components/Library';\nimport Nav from './components/Nav';\nimport data from './data';\n\nfunction App() {\n  // ref\n  const audioRef = useRef(null);\n  // State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play(); \n  };\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    // calculate %\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n    setSongInfo({ ...songInfo, currentTime: current, duration, animationPercentage: animation });\n  };\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus}/>\n      <Song currentSong={currentSong}/>\n      <Player \n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying} \n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library \n        audioRef={audioRef} \n        songs={songs} \n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio \n        onTimeUpdate={timeUpdateHandler} \n        onLoadedData={timeUpdateHandler}\n        ref={audioRef} \n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}